name: Build & Compile on Multiple platforms

on:
  push:
    branches: [ "dev" ]

jobs:
  build-compile-linux:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        preset: [unix_release_makefile, unix_debug_makefile]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies
      id: strings
      shell: bash
      run: |
        sudo apt update
        sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev    
        sudo apt-get install libegl1-mesa-dev
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Build
      run: cmake --preset ${{ matrix.preset }} -B ${{ steps.strings.outputs.build-output-dir }}

    - name: Compile
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }}

  build-compile-windows:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        preset: [ unix_release_makefile, unix_debug_makefile ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Build
        run: cmake --preset ${{ matrix.preset }} -B ${{ steps.strings.outputs.build-output-dir }}

      - name: Compile
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }}

  build-compile-macos:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        preset: [ unix_release_makefile, unix_debug_makefile ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Build
        run: cmake --preset ${{ matrix.preset }} -B ${{ steps.strings.outputs.build-output-dir }}

      - name: Compile
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }}